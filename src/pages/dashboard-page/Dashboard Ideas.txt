// Necessary hooks
import useColleges from "@hooks/useColleges";
import { useQuery } from "@tanstack/react-query";

// Components
import StatCard from "./StatCard";
import CollegeCard from "./components/CollegeCard";
import EmptyContent from "@components/EmptyContent";
import LoadingContent from "@components/LoadingContent";
import ErrorContent from "@components/ErrorContent";

// Material UI Icons
import EventAvailableIcon from "@mui/icons-material/EventAvailable";
import SchoolIcon from "@mui/icons-material/School";
import PeopleAltIcon from "@mui/icons-material/People";
import AddIcon from "@mui/icons-material/Add";
import CircularProgress from "@mui/material/CircularProgress";
import WarningAmberIcon from "@mui/icons-material/WarningAmber";

export default function GlobalDashboard() {
  const {
    data: colleges,
    isPending: colleges_loading,
    error: colleges_error,
  } = useColleges();

  // Mock Data for Testing
  // const colleges = [];
  // const colleges_loading = true;
  // const colleges_error = { message: "Failed to fetch colleges" };

  // Debugging
  console.log(colleges);
  console.log(colleges_error);
  console.log(colleges_loading);

  // Error in Colleges
  if (colleges_error)
    return (
      <div className="h-full flex items-center justify-center">
        <ErrorContent
          errorTitle={"Unable to Load Colleges"}
          error={colleges_error}
        />
      </div>
    );

  return (
    <main className="space-y-6 p-6 h-full flex flex-col justify-center ">
      {/* Stat Cards */}
      <div className="grid grid-cols-4 gap-4">
        <StatCard title="Courses" count={0} icon={SchoolIcon} />
        <StatCard title="Teachers" count={0} icon={PeopleAltIcon} />
        <StatCard title="Scheduled Slots" count={0} icon={EventAvailableIcon} />
        <StatCard title="Conflicts" count={0} icon={WarningAmberIcon} />
      </div>

      {/* Main Content Card */}
      <div className="flex-1 bg-white border-12 border-white rounded-2xl shadow-md overflow-auto">
        {colleges_loading ? (
          // Loading State
          <section className="h-full flex flex-col items-center justify-center">
            <LoadingContent
              loadingTitle={"Colleges"}
              loadingDesc={"Fetching your academic programs..."}
            />
          </section>
        ) : colleges?.length === 0 ? (
          // Empty State
          <section className="flex flex-col items-center justify-center h-full">
            <EmptyContent
              emptyTitle={"No Colleges Yet"}
              emptyDesc={
                "Get started by adding your first college program. You can manage courses, teachers, and schedules once you create a college."
              }
              icon={SchoolIcon}
            />
            <button className="flex items-center gap-2 px-8 py-3 bg-blue-600 text-white rounded-xl shadow-lg hover:shadow-xl">
              <AddIcon />
              Add Your First College
            </button>
          </section>
        ) : (
          // Content State
          <div className="p-8">
            <header className="flex items-center justify-between mb-6">
              <div className="flex items-center gap-3">
                <div className="bg-red-200 p-2 rounded-lg">
                  <SchoolIcon className="text-red-800" />
                </div>
                <div>
                  <h2 className="text-xl font-semibold text-gray-800">
                    Academic Programs
                  </h2>
                </div>
              </div>
            </header>

            <section className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 ">
              {colleges?.map((college) => (
                <CollegeCard key={college.college_id} college={college} />
              ))}
            </section>
          </div>
        )}
      </div>
    </main>
  );
}


// COOL GRID LAYOUT WITH WELCOME BANNER

      <div className="space-y-6 h-full grid grid-cols-10 grid-rows-6 gap-4">
      {/* Stat Cards */}
      <div className="col-span-full row-span-1 h-full">
        <div className="grid grid-cols-4 gap-4">
          <StatCard title="Courses" count={0} icon={SchoolIcon} />
          <StatCard title="Teachers" count={0} icon={PeopleAltIcon} />
          <StatCard
            title="Scheduled Slots"
            count={0}
            icon={EventAvailableIcon}
          />
          <StatCard title="Conflicts" count={0} icon={WarningAmberIcon} />
        </div>
      </div>
      {/* Welcome Banner */}
      <div className="col-span-2 row-span-5 h-full bg-blue-400"></div>
      {/* College Programs */}
      <div className="col-span-8 row-span-5 h-full bg-red-400">
        <div className="flex-1 bg-white border-12 border-white rounded-2xl shadow-md overflow-auto">
          {colleges_loading ? (
            // Loading State
            <div className="h-96 flex flex-col items-center justify-center">
              <CircularProgress size={48} className="mb-4 text-blue-600" />
              <h3 className="text-xl font-semibold text-gray-700 mb-2">
                Loading Colleges
              </h3>
              <p className="text-gray-500">
                Fetching your academic programs...
              </p>
            </div>
          ) : colleges?.length === 0 ? (
            // Empty State
            <div className="flex flex-col items-center justify-center h-96 bg-gradient-to-br from-gray-50 to-blue-50">
              <div className="bg-blue-100 p-6 rounded-full mb-6">
                <SchoolIcon className="text-blue-600" sx={{ fontSize: 48 }} />
              </div>
              <h3 className="text-2xl font-bold text-gray-700 mb-3">
                No Colleges Yet
              </h3>
              <p className="text-gray-500 text-center max-w-md mb-6">
                Get started by adding your first college program. You can manage
                courses, teachers, and schedules once you create a college.
              </p>
              <button className="flex items-center gap-2 px-8 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-xl transition-colors shadow-lg hover:shadow-xl">
                <AddIcon />
                Add Your First College
              </button>
            </div>
          ) : (
            // Content State
            <div className="p-8">
              <div className="flex items-center justify-between mb-6">
                <div className="flex items-center gap-3">
                  <div className="bg-blue-100 p-2 rounded-lg">
                    <SchoolIcon className="text-blue-600" />
                  </div>
                  <div>
                    <h2 className="text-xl font-semibold text-gray-800">
                      Academic Programs
                    </h2>
                  </div>
                </div>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 auto-rows-fr">
                {colleges?.map((college) => (
                  <CollegeCard key={college.college_id} college={college} />
                ))}
              </div>
            </div>
          )}
        </div>
      </div>
    </div>